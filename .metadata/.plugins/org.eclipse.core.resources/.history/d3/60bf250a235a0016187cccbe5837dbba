# coding=gbk

import pandas as pd
import pypyodbc
from datetime import date
from datetime import timedelta
import xlsxwriter


def connect_to_database(driver, ip, port, db_name, user_ID, password):
    connect_str = ('DRIVER={%s};'
                     'SERVER=%s,%s;'
                     'UID=%s;'
                     'PWD=%s;'
                     %(driver, ip, port, user_ID, password))
    #print(connect_str)
    try:
        conn = pypyodbc.connect(connect_str)
        return conn
    except Exception as e:
        print(e)

def sql_ret_to_readable(ret, report_type):
    readable_str=''
    if report_type == "fund_trans":
        
        return readable_str

def generate_excel(data, name):
    #workbook = xlsxwriter.Workbook('demo1.xlsx')
    data.to_excel(name+'.xlsx', sheet_name='Sheet1')
    #workbook.close()

if __name__ == "__main__":
    #result = connect_to_database('SQL Server', '112.74.196.62', '1433', 'jydb_all', 'dpadmin', 'dpadmin')
    conn = connect_to_database('SQL Server', '112.74.196.62', '1433', 'jydb_all', 'dpadmin', 'dpadmin')
    
    portsname = '\'%对冲%\''
    date_today = date.today()
    #date_today = date_today - timedelta(1)
    
    
    #for key in head.keys():
    #    data = pd.read_sql(sql_stock_trans, conn)
    product_name = ['对冲','精选','主动01','主动02','自营']
    for name in product_name:
        portsname = '\'%'+name+'%\''
        sql_fund_trans = ("select SecurityName, EntrustBS, convert(decimal(18,1), sum(TradeAmount)/10000)"
                 "as balance from jydb_all.dbo.dpTransDetails a where a.portsname like %s and securitytype = '3' and date = \'%s\'"
                 "group by SecurityName, EntrustBS" % (portsname, date_today))
        sql_fund_pos = ("select SecurityName, convert(decimal(18,1),CurrentMarketValue/10000) as '基金市值' "
                    "from dpPortDetails a where a.portsname like %s and securitytype = '3' and date = \'%s\'" % (portsname, date_today))
        sql_stock_mkv = ("select convert(decimal(18,1),SUM(a.CurrentMarketValue)/10000) as '股票市值' from dpPortDetails a "
                     "where a.portsname like %s and securitytype = '0' and date = \'%s\' " % (portsname, date_today))
        sql_stock_trans = ("select EntrustBS, convert(decimal(18,1),SUM(TradeAmount)/10000) as balance from jydb_all.dbo.dpTransDetails a "
                       "where a.portsname like %s and securitytype = '0' and date = \'%s\' group by EntrustBS"%(portsname, date_today))
        head = {'股票交易':sql_stock_trans, '股票持仓':sql_stock_mkv, '基金交易':sql_fund_trans, '基金持仓':sql_fund_pos}
        pd_table_list = []
        for key in head.keys():
            sql = head[key]
            pd_data = pd.read_sql(head[key], conn)
            pd_table_list.append(pd_data)
        writer = pd.ExcelWriter(name+' 'str(date_today)+'.xlsx')
        row = 0
        for dataframe in pd_table_list:
            dataframe.to_excel(writer, startrow = row, startcol = 0)
            row = row + len(dataframe.index) + 2
        writer.save()
            #print(pd_data)
#     print('股票交易')
#     print(pd.read_sql(sql_stock_trans, conn))
#     print('_________________________________')
#     print('股票持仓')
#     print(pd.read_sql(sql_stock_mkv, conn))
#     print('_________________________________')
#     print('基金交易')
#     data = pd.read_sql(sql_fund_trans, conn)
#     generate_excel(data, '基金交易')
#     print(data)
#     print('_________________________________')
#     print('基金持仓')
#     data = pd.read_sql(sql_fund_pos, conn)
#     generate_excel(data, '基金持仓')
#     print(data)
    
    #result = pd.read_sql(sql_fund_trans, conn)
    #a=result['balance'].values.to_string()+'万'
    #a = [str(item)+'万' for item in result['balance'].values]
    #print(a)
    #generate_excel(result)
    #print(result.to_html())
    
    
    
    
    
    
    